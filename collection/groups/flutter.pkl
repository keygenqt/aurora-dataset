import "../authors.pkl"
import "../templates/ItemTemplate.pkl"

dataset = new Listing<ItemTemplate> {
  new {
    t = "Что такое Flutter CLI?"
    k = new Listing<String> {
      "flutter-cli" "кли" "флаттер"
    }
    b = """
      Это интерфейс командной строки Flutter, который обеспечивает основную работу с фреймворком.⌫
      Устанавливается вместе с Flutter Framework.
      Справку можно вызвать:
      ⌫
      <pre><code class="language-shell">⌫
      flutter --help
      </code></pre>
      ⌫
      С поддержкой ОС Аврора:
      <pre><code class="language-shell">⌫
      flutter-aurora --help
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как установить Flutter с поддержкой ОС Аврора?"
    k = new Listing<String> {
      "поставить" "флаттер" "aurora os"
    }
    b = """
      Есть несколько способов установки Flutter:
      1. <a href="https://omprussia.gitlab.io/flutter/flutter/install/linux">Официальная документация</a>
      2. <a href="https://keygenqt.github.io/aurora-cli">Aurora CLI</a>
      3. <a href="https://keygenqt.github.io/aurora-toolbox">Aurora Toolbox</a>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как написать Flutter плагин для ОС Аврора?"
    k = new Listing<String> {
      "plugin" "aurora os" "флаттер"
    }
    b = """
      Есть несколько способов:
      1. <a href="https://docs.flutter.dev/platform-integration/platform-channels">Platform Channels</a>
      2. <a href="https://pub.dev/packages/dbus">D-Bus</a>
      3. <a href="https://docs.flutter.dev/platform-integration/android/c-interop">FFI</a>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Что такое Flutter Engine?"
    k = new Listing<String> {
      "движок" "флаттер"
    }
    b = """
      Flutter Engine — это переносимая среда выполнения для хостинга приложений Flutter.⌫
      Она реализует основные библиотеки Flutter, включая анимацию и графику, файловый и сетевой ввод-вывод.⌫
      Поддержку доступности, архитектуру плагинов, среду выполнения Dart и цепочку инструментов компиляции.⌫
      Большинство разработчиков будут взаимодействовать с Flutter через Flutter Framework.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Что такое Flutter Embedder?"
    k = new Listing<String> {
      "эмбеддер" "флаттер"
    }
    b = """
      Разработка компании Открытая мобильная платформа обеспечивающая работу Flutter на ОС Аврора.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Сколько плагинов Flutter доступно на ОС Аврора?"
    k = new Listing<String> {
      "plugins" "флаттер"
    }
    b = """
      Вы всегда можете получить актуальную информацию о плагинах с поддержкой ОС Аврора в документации проекта:
      https://omprussia.gitlab.io/flutter/flutter/support
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как помочь проекту Flutter для ОС Аврора?"
    k = new Listing<String> {
      "aurora os" "флаттер"
    }
    b = """
      Проект Flutter для ОС Аврора open-source, любой желающий может сделать мерж-реквест и предложить свой код:
      https://gitlab.com/omprussia/flutter
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Где найти информацию о проекте Flutter для ОС Аврора?"
    k = new Listing<String> {
      "aurora" "aurora os" "флаттер"
    }
    b = """
      Подробная документация находится по адресу:⌫
      https://omprussia.gitlab.io/flutter/flutter
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Можно ли написать плагин не используя С++?"
    k = new Listing<String> {
      "cpp" "сделать" "plugin"
    }
    b = """
      Да, бывают плагины не использующие С++ код.⌫
      Такой плагин можно написать с использованием другого плагина - https://pub.dev/packages/dbus.⌫
      На выходе вы получите пакет, который использует плагин в зависимостях.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Я нашел баг, во Flutter как ее можно решить?"
    k = new Listing<String> {
      "ошибку" "проблему" "флаттер"
    }
    b = """
      Есть несколько способов решить проблему:
      1. Завести <a href="https://gitlab.com/groups/omprussia/flutter/-/issues">issue</a> и подождать ответа разработчиков.
      2. Обратиться за помощью в телеграм канал @aurora_devs в раздел Flutter.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как установить Flutter для ОС Аврора на macOS?"
    k = new Listing<String> {
      "aurora" "aurora os" "флаттер" "мак" "поставить"
    }
    b = """
      На данный момент поддержки ОС Аврора в целом нет.⌫
      Но работы в этом направлении ведутся.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как установить Flutter для ОС Аврора на Windows?"
    k = new Listing<String> {
      "aurora" "aurora os" "флаттер" "винду" "виндовс" "поставить"
    }
    b = """
      На данный момент Flutter для ОС Аврора поддерживает только Linux (рекомендована Ubuntu).⌫
      WSL2 на Windows работает лишь частично, полного функционала Flutter CLI нет.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как собрать приложение Flutter на ОС Аврора?"
    k = new Listing<String> {
      "aurora" "aurora os" "build" "флаттер" "сбилдить"
    }
    b = """
      Выполнить можно это использую Flutter CLI.⌫
      Для этого перейдите в проект и обновите зависимости:
      <pre><code class="language-shell">⌫
      flutter-aurora pub get
      </code></pre>
      ⌫
      Собрать приложение можно следующей командой:
      <pre><code class="language-shell">⌫
      flutter-aurora build aurora --release
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Не удается сгенерировать привязки для FFI."
    k = new Listing<String> {
      "bindings" "foreign function interface" "флаттер" "flutter"
    }
    b = """
      Проверьте, установлен ли у вас clang:
      <pre><code class="language-shell">⌫
      sudo apt-get install clang
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как указать архитектуру приложения при сборке проекта Flutter?"
    k = new Listing<String> {
      "собрать" "arch" "флаттер"
    }
    b = """
      Flutter для ОС Аврора поддерживает 3 архитектуры:
      1. armv7hl
      2. aarch64
      3. x86_64
      Flutter CLI имеет аргумент <code>--target-platform</code> c помощью которого можно указать нужную:
      1. aurora-arm (соответствует armv7hl)
      2. aurora-arm64 (соответствует aarch64)
      3. aurora-x64 (соответствует x86_64)
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как добавить поддержку ОС Аврора в существующий проект Flutter?"
    k = new Listing<String> {
      "aurora" "aurora os" "флаттер" "к проекту"
    }
    b = """
      Для этого нужно перейти в проект и выполнить команду:
      <pre><code class="language-shell">⌫
      flutter-aurora create --platforms=aurora --org=<orgname> .
      </code></pre>
      ⌫
      <code>orgname</code> - название пакета, например <code>com.keygenqt</code>.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Есть ли образ Docker c Flutter для ОС Аврора?"
    k = new Listing<String> {
      "aurora" "aurora os" "флаттер" "докер" "image"
    }
    b = """
      Официально такого образа нет.⌫
      Есть пет проект который работает на Linux, с флагом <code>--privileged</code>:⌫
      https://github.com/keygenqt/flutter-aurora-docker
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как активировать нативный клиент dbus Flutter?"
    k = new Listing<String> {
      "дбас" "флаттер" "В-Bus"
    }
    b = """
      Это можно сделать командой:
      <pre><code class="language-shell">⌫
      dart pub global activate dbus
      </code></pre>
      А далее можно использовать CLI <code>dart-dbus</code>.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как посмотреть логи запущенного приложения Flutter?"
    k = new Listing<String> {
      "log" "флаттер" "получить" "найти"
    }
    b = """
      Для этого нужно перейти по ssh на устройство или эмулятор и воспользоваться командой:
      <pre><code class="language-shell">⌫
      journalctl -f
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Не работает DevTools при запуске с иконки."
    k = new Listing<String> {
      "девтулс" "дебаг" "debug" "dart"
    }
    b = """
      Есть разница при запуске приложения из IDE VS Code и запуском приложения через иконку.⌫
      Если IDE запускает из под пользователя, то запуск через иконку происходит в изолированном окружении.⌫
      В изоляции (в песочнице) Dart debug работать не будет - окружение не дает запустить сервер DevTools.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "IDE VS Code не видит устройство."
    k = new Listing<String> {
      "вс код" "иде" "девайс" "device"
    }
    b = """
      В первую очередь необходимо проверить все ли необходимое установлено в системе:
      <pre><code class="language-shell">⌫
      flutter-aurora doctor
      </code></pre>
      ⌫
      Убедиться что включены необходимые параметры во Flutter CLI:
      <pre><code class="language-shell">⌫
      flutter-aurora config --enable-aurora
      flutter-aurora config --enable-aurora-devices
      </code></pre>
      ⌫
      Добавить устройство можно через команду Flutter CLI:
      <pre><code class="language-shell">⌫
      flutter aurora-devices add
      </code></pre>
      ⌫
      Устройств должно быть подключено по ssh ключу, а ключ должен быть зарегистрирован на устройстве.⌫
      Сделать это можно командой:
      <pre><code class="language-shell">⌫
      ssh-copy-id defaultuser@{remote_host (default - 192.168.2.15)}
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Где найти конфигурацию Flutter CLI?"
    k = new Listing<String> {
      "конфиг" "flutter cli" "флаттер кли"
    }
    b = """
      Вы можете конфигурировать Flutter без необходимости использовать <code>flutter-aurora config</code>.⌫
      Файлы конфигурации храняться в формате json, главное знать что менять.⌫
      Их можно найти в директории: <code>~/.config/flutter</code>.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как проверить, что Flutter установлен правильно?"
    k = new Listing<String> {
      "флаттер" "доктор" "doctor" "поставлен"
    }
    b = """
      Для этого можно выполнить следующую команду:
      <pre><code class="language-shell">⌫
      flutter-aurora doctor
      </code></pre>
      Она найдет некоторые возможные ошибки, но основательно можно это проверить - собрать демо проект⌫
      <a href="https://gitlab.com/omprussia/flutter/fluttery-todo">Fluttery ToDo</a>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "На каких операционных системах доступен Flutter для ОС Аврора?"
    k = new Listing<String> {
      "виндовс" "мак" "линукс" "Windows" "macOS" "Linux" "os" "ос" "флаттер" "aurora" "aurora os" "можно поставить"
    }
    b = """
      Изначально Flutter для ОС Аврора поддерживал только Linux (рекомендовано Ubuntu).⌫
      Более детально уточнить этот вопрос можно в документации проекта:⌫
      https://omprussia.gitlab.io/flutter/flutter
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как отформатировать проект без установки Dart?"
    k = new Listing<String> {
      "форматирование" "дарт"
    }
    b = """
      Для форматирования проектов необходим Dart.⌫
      Flutter SDK содержит его копию и мы можем без установки отдельной версии Dart форматировать проекты.⌫
      Для этого можно добавить алиас, Dart можно найти <code>{flutter_dir}/bin/dart</code>.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как создать свой первый проект Flutter?"
    k = new Listing<String> {
      "сделать" "флаттер" "hello world"
    }
    b = """
      Flutter CLI раздел <code>create</code> с шаблонами проектов.
      ⌫
      Стартовое приложение можно создать командой:
      <pre><code class="language-shell">⌫
      flutter-aurora create --platforms=aurora --template=app --org=com.keygenqt my_app
      </code></pre>
      ⌫
      Пакет можно создать следующей командой
      <pre><code class="language-shell">⌫
      flutter-aurora create --platforms=aurora --template=package --org=com.keygenqt my_package
      </code></pre>
      ⌫
      Плагин Platform Channel можно создать выполнив:
      <pre><code class="language-shell">⌫
      flutter-aurora create --platforms=aurora --template=plugin --org=com.keygenqt my_plugin
      </code></pre>
      ⌫
      Плагин FFI можно создать выполнив:
      <pre><code class="language-shell">⌫
      flutter-aurora create --platforms=aurora --template=plugin_ffi --org=com.keygenqt my_plugin_ffi
      </code></pre>
      ⌫
      Полную справку можно вызвать командой:
      <pre><code class="language-shell">⌫
      flutter-aurora create --help
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Не стартует приложение с иконки, хотя с IDE VS Code работает."
    k = new Listing<String> {
      "вс код" "код" "запускается"
    }
    b = """
      Возможно причина в том что приложение с иконке запускается в песочнице, замещенном окружении.⌫
      Необходимо проверить разрешения (permission) приложения, это часто является причиной такого поведения.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как сделать скриншот с эмулятора или устройства?"
    k = new Listing<String> {
      "аврора" "ос аврора" "aurora" "aurora os" "эмуля" "девайса"
    }
    b = """
      Вы можете сделать скриншот средствами Flutter CLI.
      Для этого необходимо выполнить команду:
      <pre><code class="language-shell">⌫
      flutter-aurora screenshot -d aurora
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как запустить интеграционные тесты Flutter?"
    k = new Listing<String> {
      "флаттер" "integration_test" "integration" "tests" "выполнить"
    }
    b = """
      Вы можете выполнить это средствами IDE (VS Code).⌫
      Или выполнив команду в терминале указав пусть к файлу с тестами:
      <pre><code class="language-shell">⌫
      flutter-aurora test integration_test/example_test.dart
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как обновить Flutter?"
    k = new Listing<String> {
      "флаттер" "update" "апунть"
    }
    b = """
      Flutter CLI имеет 2 команды на обновление и откат обновления, можно воспользоваться ими:
      1. <code>upgrade</code> - обновление.
      2. <code>downgrade</code> - откат обновления.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как обновить кеш Flutter?"
    k = new Listing<String> {
      "флаттер" "cache" "precache" "очистить"
    }
    b = """
      Вы можете это сделать через Flutter CLI командой:
      <pre><code class="language-shell">⌫
      flutter-aurora precache --aurora --force
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как получить список доступных Flutter CLI эмуляторов?"
    k = new Listing<String> {
      "флаттер" "кли" "list" "emulators" "эмулятор" "узнать"
    }
    b = """
      Вы можете это сделать через Flutter CLI командой:
      <pre><code class="language-shell">⌫
      flutter-aurora emulators
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как получить список доступных Flutter CLI устройств?"
    k = new Listing<String> {
      "флаттер" "list" "devices" "девайсов" "кли" "узнать"
    }
    b = """
      Вы можете это сделать через Flutter CLI командой:
      <pre><code class="language-shell">⌫
      flutter-aurora devices
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как очистить кеш проекта Flutter?"
    k = new Listing<String> {
      "флаттер" "cache" "почистить"
    }
    b = """
      Это можно сделать командой:
      <pre><code class="language-shell">⌫
      flutter-aurora clean
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Приложение Flutter не устанавливается."
    k = new Listing<String> {
      "флаттер" "приложуха" "не ставиться"
    }
    b = """
      Пакет должен быть подписан. ОС Аврора имеет валидацию пакетов при их установке.⌫
      Необходимо провалидировать пакет с помощью aurora-cli или psdk.⌫
      Если с этим порядок более детальную информацию можно получить подключившись по ssh к девайсу или эмулятору.⌫
      Выполнить команду перед установкой и посмотреть логи:
      <pre><code class="language-shell">⌫
      journalctl -u apm -f
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Есть ли поддержка Flutter для ОС Аврора в IntelliJ IDEA?"
    k = new Listing<String> {
      "флаттер" "idea" "jetbrains" "ide" "иде" "android studio"
    }
    b = """
      Нет, IDEA не поддерживается.⌫
      Но VS Code работает отлично, а так как предстоит, возможно, работа с С++ это IDE отлично подойдет.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как подключить сигналы и слоты Qt во Flutter плагине для ОС Аврора?"
    k = new Listing<String> {
      "флаттер" "aurora" "aurora os" "signal" "slop" "кьют" "plugin"
    }
    b = """
      Qt без сигналов и слотов работает без дополнительных манипуляций.⌫
      Если нужны именно сигналы Qt необходимо активировать их работу.
      Для этого в <code>main.cpp</code> приложения нужно добавить:
      <pre><code class="language-cpp">⌫
      #include &lt;flutter/flutter_aurora.h&gt;
      #include &lt;flutter/flutter_compatibility_qt.h&gt; // &lt;- Add for Qt
      #include "generated_plugin_registrant.h"

      int main(int argc, char *argv[]) {
          aurora::Initialize(argc, argv);
          aurora::EnableQtCompatibility(); // &lt;- Enable Qt
          aurora::RegisterPlugins();
          aurora::Launch();
          return 0;
      }
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как пронять зависимость плагин это или пакет Flutter?"
    k = new Listing<String> {
      "флаттер" "package" "plugin" "узнать" "dependency"
    }
    b = """
      Для этого нужно посмотреть на <code>pubspec.yaml</code>.⌫
      Если в спеке нет раздела <code>plugin</code> и нет зависимостей от плагинов - это пакет.
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Что такое Client Wrapper?"
    k = new Listing<String> {
      "client-wrapper" "client_wrapper" "интерфейс" "flutter" "флаттер"
    }
    b = """
      Client Wrapper предназначен для встраивания в плагины и приложения,⌫
      чтобы обеспечить более высокие уровни абстракций C++ для взаимодействия с библиотекой Flutter.⌫
      Со временем цель состоит в том, чтобы переместить большую часть этого кода в библиотеку таким образом,⌫
      чтобы предоставить пригодный для использования ABI (например, не использовать стандартную библиотеку в интерфейсах).⌫
      https://github.com/flutter/engine/blob/main/shell/platform/common/client_wrapper/README
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Какая доступна последняя версия Flutter для ОС Аврора?"
    k = new Listing<String> {
      "флаттер" "aurora" "aurora os" "latest" "version"
    }
    b = """
      Вы всегда можете узнать последнюю доступную версию Flutter в тегах репозитория:⌫
      https://gitlab.com/omprussia/flutter/flutter/-/tags
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Есть ли демо приложение Flutter для ОС Аврора?"
    k = new Listing<String> {
      "флаттер" "aurora" "aurora os" "demo" "приложения" "где найти"
    }
    b = """
      Да приложение демонстрирующее работу можно найти по ссылке:⌫
      https://gitlab.com/omprussia/flutter/fluttery-todo
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Как локально собрать документацию Flutter для ОС Аврора?"
    k = new Listing<String> {
      "флаттер" "aurora" "aurora os" "на пк" "у себя" "поднять" "доки" "доку"
    }
    b = """
      Проект Flutter для ОС Аврора - открытый проект.⌫
      Вы можете помощь при разработке как проекта так и его документации.⌫
      Документация проекта использует mkdocs & mkdocs-material, это Python пакеты.
      ⌫
      Установить их можно командой:
      <pre><code class="language-shell">⌫
      python3 -m pip install mkdocs mkdocs-material --break-system-packages
      </code></pre>
      ⌫
      Перейти в корень проекта Flutter для ОС Аврора и выполнить:
      <pre><code class="language-shell">⌫
      mkdocs serve
      </code></pre>
      """
    a = authors.keygenqt
    ts = 1733423881
  }
  new {
    t = "Что лучше использовать Fluter или Qt на ОС Аврора?"
    k = new Listing<String> {
      "флаттер" "aurora" "aurora os" "кьют" "выбрать" "юзать" "на чем разрабатывать"
    }
    b = """
      Лучше использовать в чем есть компетенции.⌫
      Основной фреймворк для разработки это Qt.⌫
      Flutter набирает обороты: он проще, он современнее.⌫
      Выбирать вам.
      """
    a = authors.keygenqt
    ts = 1733853509
  }
  new {
    t = "Какой статус поддержки Flutter для ОС Аврора?"
    k = new Listing<String> {
      "флаттер" "aurora" "aurora os"
    }
    b = """
      Фреймворк в перманентной разработке, так же как и любые инструменты.⌫
      На нем уже пишут приложения, и вы тоже можете.
      """
    a = authors.keygenqt
    ts = 1733853509
  }
  new {
    t = "Как получить состояние аккумулятора во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "battery_plus" "battery" "aurora"
    }
    b = """
      Получить статус заряда аккумулятора и его состояние позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/battery_plus">battery_plus</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/plus_plugins/-/tree/master/packages/battery_plus_aurora">battery_plus_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как получить состояние сетевого подключения во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "connectivity" "connectivity_plus" "aurora"
    }
    b = """
      Получить состояние подключений позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/connectivity_plus">connectivity_plus</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/plus_plugins/-/tree/master/packages/connectivity_plus_aurora">connectivity_plus_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как получить информацию об устройстве во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "device_info_plus" "device info" "aurora"
    }
    b = """
      Получить информацию об устройстве позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/device_info_plus">device_info_plus</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/plus_plugins/-/tree/master/packages/device_info_plus_aurora">device_info_plus_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как получить информацию об приложении во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "info_plus" "info" "aurora"
    }
    b = """
      Получить информацию о запущенном приложении позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/package_info_plus">package_info_plus</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/plus_plugins/-/tree/master/packages/package_info_plus_aurora">package_info_plus_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как получить данные датчиков во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "sensors_plus" "sensors" "aurora"
    }
    b = """
      Состояние датчиков позволяет получить имплементация плагина⌫
      <a href="https://pub.dev/packages/sensors_plus">sensors_plus</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/plus_plugins/-/tree/master/packages/sensors_plus_aurora">sensors_plus_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как расшарить файл во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "share_plus" "share" "aurora"
    }
    b = """
      Обмениваться данными позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/share_plus">share_plus</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/plus_plugins/-/tree/master/packages/share_plus_aurora">share_plus_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как воспроизвести аудио-файл во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "audioplayers" "audio player" "aurora"
    }
    b = """
      Проиграть аудио-файл позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/audioplayers">audioplayers</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/audioplayers_aurora">audioplayers_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как получить состояние клавиатуры во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "keyboard_visibility" "keyboard visibility" "aurora"
    }
    b = """
      Получить статус клавиатуры и ее высоту позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/flutter_keyboard_visibility">flutter_keyboard_visibility</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/flutter_keyboard_visibility_aurora">flutter_keyboard_visibility_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как отправить системное уведомление во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "flutter_local_notifications" "notifications" "aurora"
    }
    b = """
      Отправить системное уведомление позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/flutter_local_notifications">flutter_local_notifications</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/flutter_local_notifications_aurora">flutter_local_notifications_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как сохранить данные во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "sqflite" "objectbox" "shared preferences" "secure" "aurora"
    }
    b = """
      Зависит от количества данных и надежности их хранения. Для этого можно воспользоваться имплементациями плагинов:
      1. <a href="https://pub.dev/packages/sqflite">sqflite</a> -⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/sqflite_aurora">sqflite_aurora</a>.
      ⌫
      2. <a href="https://pub.dev/packages/objectbox_flutter_libs">objectbox_flutter_libs</a> -⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/objectbox_flutter_libs_aurora">objectbox_flutter_libs_aurora</a>.
      ⌫
      3. <a href="https://pub.dev/packages/shared_preferences">shared_preferences</a> -⌫
      <a href="https://gitlab.com/omprussia/flutter/packages/-/tree/main/packages/shared_preferences_aurora">shared_preferences_aurora</a>.
      ⌫
      4. <a href="https://pub.dev/packages/flutter_secure_storage">flutter_secure_storage</a> -⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/flutter_secure_storage_aurora">flutter_secure_storage_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как получить данные с Qr кода во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "qr_code_scanner" "qr code" "aurora"
    }
    b = """
      Отсканировать QR код позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/qr_code_scanner">qr_code_scanner</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/qr_code_scanner_aurora">qr_code_scanner_aurora</a>.⌫
      А так же имплементация плагина⌫
      <a href="https://pub.dev/packages/camera">camera</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/packages/-/tree/main/packages/camera_aurora">camera_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как не дать заснуть устройству во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "wakelock_plus" "wakelock" "aurora"
    }
    b = """
      Отключить sleep mode позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/wakelock_plus">wakelock_plus</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/flutter-community-plugins/wakelock_plus">wakelock_plus_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как получить путь к файлу во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "path_provider" "path provider" "aurora"
    }
    b = """
      Получить системные пути и пути приложения позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/path_provider">path_provider</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/packages/-/tree/main/packages/path_provider_aurora">path_provider_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как открыть ссылку во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "url_launcher" "url launcher" "aurora"
    }
    b = """
      Открыть ссылку, email, телефон позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/url_launcher">url_launcher</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/packages/-/tree/main/packages/url_launcher_aurora">url_launcher_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как воспроизвести видео-файл во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "video_player" "video player" "aurora"
    }
    b = """
      Воспроизводить видео файлы позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/video_player">video_player</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/packages/-/tree/main/packages/video_player_aurora">video_player_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
  new {
    t = "Как подключить камеру во Flutter?"
    i = "https://raw.githubusercontent.com/keygenqt/aurora-dataset/refs/heads/dump/data/23ed2376-09cd-444d-a8d9-dd98e56ec847.png"
    k = new Listing<String> {
      "флаттер" "плагин" "plugin" "camera" "aurora"
    }
    b = """
      Использовать камеру в приложениях Flutter позволяет имплементация плагина⌫
      <a href="https://pub.dev/packages/camera">camera</a>⌫
       - ⌫
      <a href="https://gitlab.com/omprussia/flutter/packages/-/tree/main/packages/camera_aurora">camera_aurora</a>.
      """
    a = authors.keygenqt
    ts = 1734365894
  }
}
